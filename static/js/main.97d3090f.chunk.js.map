{"version":3,"sources":["pages/HeroGenerator.js","MainMenu.js","App.js","reportWebVitals.js","index.js"],"names":["layout","labelCol","span","wrapperCol","buttonItemLayout","offset","convert2Dto1D","array","newArr","i","length","concat","styles","cell","width","height","borderWidth","backgroundColor","border","justifyContent","textAlign","cursor","HeroGenerator","Form","useForm","form","useState","undefined","heroJson","setHeroJson","Array","fill","attackRange","setAttackRange","onFinish","values","name","prefab","hp","attack","SP","cooldown","redeployTime","respawnTime","stats","Item","label","placeholder","style","map","d","display","flexDirection","data","k","onClick","x","y","tmp","tmp2","onClickAttackRange","type","htmlType","value","JSON","stringify","Header","Layout","Content","Footer","Sider","SiderDemo","state","collapsed","onCollapse","console","log","setState","this","minHeight","collapsible","className","theme","defaultSelectedKeys","mode","icon","UserAddOutlined","padding","margin","React","Component","App","MainMenu","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.97d3090f.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Form, Input, Button, InputNumber } from 'antd';\r\nimport TextArea from 'antd/lib/input/TextArea';\r\n\r\nconst layout = {\r\n  labelCol: { span: 2 },\r\n  wrapperCol: { span: 4 },\r\n};\r\n\r\nconst buttonItemLayout = {\r\n  wrapperCol: {\r\n    span: 14,\r\n    offset: 2,\r\n  },\r\n};\r\n\r\nconst convert2Dto1D = (array) => {\r\n  let newArr = [];\r\n\r\n  for (var i = 0; i < array.length; i++) {\r\n    newArr = newArr.concat(array[i]);\r\n  }\r\n\r\n  for (var i = 0; i < newArr.length; i++) {\r\n    newArr[i] = newArr[i] ? 1 : 0;\r\n  }\r\n\r\n  return newArr;\r\n};\r\n\r\nconst HeroGenerator = () => {\r\n  const [form] = Form.useForm();\r\n  const [heroJson, setHeroJson] = useState(undefined);\r\n  const [attackRange, setAttackRange] = useState(\r\n    new Array(9).fill(new Array(9).fill(false))\r\n  );\r\n\r\n  const onClickAttackRange = (x, y) => {\r\n    let tmp = [...attackRange];\r\n    let tmp2 = [...tmp[y]];\r\n    tmp2[x] = !attackRange[y][x];\r\n    tmp[y] = tmp2;\r\n    setAttackRange(tmp);\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    const {\r\n      name,\r\n      prefab,\r\n      hp,\r\n      attack,\r\n      SP,\r\n      cooldown,\r\n      redeployTime,\r\n      respawnTime,\r\n    } = values;\r\n    setHeroJson({\r\n      name,\r\n      prefab,\r\n      stats: {\r\n        hp,\r\n        attack,\r\n        SP,\r\n        cooldown,\r\n        redeployTime,\r\n        respawnTime,\r\n        attackRange: convert2Dto1D(attackRange),\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form {...layout} layout={'horizontal'} form={form} onFinish={onFinish}>\r\n        <Form.Item label='Name' name='name'>\r\n          <Input placeholder={`Hero's name`} />\r\n        </Form.Item>\r\n        <Form.Item label='Prefab' name='prefab'>\r\n          <Input placeholder={`Prefab's name`} />\r\n        </Form.Item>\r\n        <Form.Item label='HP' name='hp'>\r\n          <InputNumber placeholder={`Hero's HP`} />\r\n        </Form.Item>\r\n        <Form.Item label='Attack' name='attack'>\r\n          <InputNumber placeholder={`Attack damage`} />\r\n        </Form.Item>\r\n        <Form.Item label='SP' name='SP'>\r\n          <InputNumber placeholder={`SP cost`} />\r\n        </Form.Item>\r\n        <Form.Item label='Cooldown' name='cooldown'>\r\n          <InputNumber placeholder={`Cooldown`} />\r\n        </Form.Item>\r\n        <Form.Item label='Redeploy Time' name='redeployTime'>\r\n          <InputNumber placeholder={`Redeploy time`} />\r\n        </Form.Item>\r\n        <Form.Item label='Respawn Time' name='respawnTime'>\r\n          <InputNumber placeholder={`Respawn time`} />\r\n        </Form.Item>\r\n        <Form.Item label='Attack Range' name='attackRange'>\r\n          <div style={{}}>\r\n            {attackRange.map((d, i) => {\r\n              return (\r\n                <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n                  {d.map((data, k) => (\r\n                    <div\r\n                      style={{\r\n                        ...styles.cell,\r\n                        backgroundColor:\r\n                          (k === 4) & (i === 4)\r\n                            ? '#ffc478'\r\n                            : data\r\n                            ? '#75cfb8'\r\n                            : '#f0e5d8',\r\n                      }}\r\n                      onClick={() => {\r\n                        if (k !== 4 || i !== 4) {\r\n                          onClickAttackRange(k, i);\r\n                        }\r\n                      }}\r\n                    ></div>\r\n                  ))}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </Form.Item>\r\n        <Form.Item {...buttonItemLayout}>\r\n          <Button type='primary' htmlType='submit'>\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n      <TextArea value={JSON.stringify(heroJson)} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  cell: {\r\n    width: 30,\r\n    height: 30,\r\n    borderWidth: 1,\r\n    backgroundColor: 'white',\r\n    border: '1px dashed rgba(1, 1, 1, .35)',\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    cursor: 'default',\r\n  },\r\n};\r\n\r\nexport default HeroGenerator;\r\n","import React from 'react';\r\nimport { Layout, Menu, Breadcrumb } from 'antd';\r\nimport { UserAddOutlined } from '@ant-design/icons';\r\nimport HeroGenerator from './pages/HeroGenerator';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nclass SiderDemo extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n  };\r\n\r\n  onCollapse = (collapsed) => {\r\n    console.log(collapsed);\r\n    this.setState({ collapsed });\r\n  };\r\n\r\n  render() {\r\n    const { collapsed } = this.state;\r\n    return (\r\n      <Layout style={{ minHeight: '100vh' }}>\r\n        <Sider collapsible collapsed={collapsed} onCollapse={this.onCollapse}>\r\n          <div className='logo' />\r\n          <Menu theme='dark' defaultSelectedKeys={['1']} mode='inline'>\r\n            <Menu.Item key='1' icon={<UserAddOutlined />}>\r\n              Create Hero\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Sider>\r\n        <Layout className='site-layout'>\r\n          <Header className='site-layout-background' style={{ padding: 0 }} />\r\n          <Content style={{ margin: '0 16px' }}>\r\n            <Breadcrumb style={{ margin: '16px 0' }}>\r\n              <Breadcrumb.Item>Create Hero</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <div\r\n              className='site-layout-background'\r\n              style={{ padding: 24, minHeight: 360 }}\r\n            >\r\n              <HeroGenerator />\r\n            </div>\r\n          </Content>\r\n          <Footer style={{ textAlign: 'center' }}>\r\n            Nightmare Garden ©2021 Created by longmaba\r\n          </Footer>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SiderDemo;\r\n","import React from 'react';\nimport './App.css';\nimport MainMenu from './MainMenu';\n\nconst App = () => <MainMenu />;\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}